// Generated from GameMakerLanguageLexer.g4 by ANTLR 4.13.0
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,118,901,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,
2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,
7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,
18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,
33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,
7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,
47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,
2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,
62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,
7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,
76,2,77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,
2,84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,
2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,
2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,
2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,7,122,
2,123,7,123,2,124,7,124,1,0,1,0,1,0,1,0,5,0,258,8,0,10,0,12,0,261,9,0,1,
0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,5,1,272,8,1,10,1,12,1,275,9,1,1,1,1,1,
1,2,5,2,280,8,2,10,2,12,2,283,9,2,1,2,1,2,1,2,1,2,5,2,289,8,2,10,2,12,2,
292,9,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,
1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,
1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,
17,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,3,20,350,8,20,1,21,1,21,
1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,
28,1,28,1,28,1,28,3,28,372,8,28,1,29,1,29,1,30,1,30,1,31,1,31,1,31,1,31,
1,32,1,32,1,32,1,32,3,32,386,8,32,1,33,1,33,1,33,1,34,1,34,1,35,1,35,1,35,
1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,
41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,44,1,44,3,44,423,
8,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,48,1,48,1,48,3,48,436,8,48,
1,49,1,49,1,49,1,49,3,49,442,8,49,1,50,1,50,1,50,1,50,1,50,3,50,449,8,50,
1,51,1,51,1,51,1,52,1,52,1,52,1,53,1,53,1,53,1,54,1,54,1,54,1,55,1,55,1,
55,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,59,1,59,1,59,
1,60,1,60,1,60,1,61,1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,
64,1,64,1,64,1,64,3,64,498,8,64,1,65,1,65,1,66,3,66,503,8,66,1,66,1,66,1,
66,5,66,508,8,66,10,66,12,66,511,9,66,1,67,1,67,1,67,1,67,5,67,517,8,67,
10,67,12,67,520,9,67,1,67,4,67,523,8,67,11,67,12,67,524,1,68,1,68,1,68,5,
68,530,8,68,10,68,12,68,533,9,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,
1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,71,1,
72,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,75,1,75,
1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,
78,1,78,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,79,1,79,1,80,1,80,
1,80,1,80,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,82,1,
82,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,83,1,83,1,83,1,83,1,84,1,84,1,84,
1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,85,1,86,1,86,1,86,1,86,1,
86,1,86,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,88,1,88,1,88,1,88,1,88,1,88,
1,88,1,88,1,88,1,89,1,89,1,89,1,89,1,89,1,90,1,90,1,90,1,90,1,90,1,90,1,
90,1,90,1,91,1,91,1,91,1,92,1,92,1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,93,
1,93,1,93,1,93,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,1,96,1,96,1,
96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,96,1,97,1,97,1,97,1,97,1,97,
1,97,1,97,1,98,1,98,1,98,1,98,1,98,1,99,1,99,1,99,1,99,1,99,1,99,1,100,1,
100,1,100,1,100,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,101,1,
102,1,102,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,103,1,
104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,105,1,105,1,
105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,105,1,106,1,
106,5,106,780,8,106,10,106,12,106,783,9,106,1,107,1,107,5,107,787,8,107,
10,107,12,107,790,9,107,1,107,1,107,1,108,1,108,1,108,1,108,1,108,1,108,
1,108,1,109,1,109,1,109,1,109,1,109,1,109,5,109,807,8,109,10,109,12,109,
810,9,109,1,109,1,109,1,109,1,109,1,109,1,109,1,109,5,109,819,8,109,10,109,
12,109,822,9,109,1,109,3,109,825,8,109,1,110,4,110,828,8,110,11,110,12,110,
829,1,110,1,110,1,111,1,111,1,111,1,112,1,112,1,112,1,112,1,113,3,113,842,
8,113,1,114,1,114,3,114,846,8,114,1,115,1,115,1,115,3,115,851,8,115,1,116,
1,116,1,116,3,116,856,8,116,1,117,1,117,1,118,1,118,1,118,1,118,1,118,1,
118,1,118,3,118,867,8,118,1,119,1,119,1,119,5,119,872,8,119,10,119,12,119,
875,9,119,3,119,877,8,119,1,120,4,120,880,8,120,11,120,12,120,881,1,121,
1,121,1,121,1,121,1,122,1,122,1,122,1,122,1,122,1,123,1,123,1,123,1,123,
1,124,4,124,898,8,124,11,124,12,124,899,1,259,0,125,3,1,5,2,7,3,9,4,11,5,
13,6,15,7,17,8,19,9,21,10,23,11,25,12,27,13,29,14,31,15,33,16,35,17,37,18,
39,19,41,20,43,21,45,22,47,23,49,24,51,25,53,26,55,27,57,28,59,29,61,30,
63,31,65,32,67,33,69,34,71,35,73,36,75,37,77,38,79,39,81,40,83,41,85,42,
87,43,89,44,91,45,93,46,95,47,97,48,99,49,101,50,103,51,105,52,107,53,109,
54,111,55,113,56,115,57,117,58,119,59,121,60,123,61,125,62,127,63,129,64,
131,65,133,66,135,67,137,68,139,69,141,70,143,71,145,72,147,73,149,74,151,
75,153,76,155,77,157,78,159,79,161,80,163,81,165,82,167,83,169,84,171,85,
173,86,175,87,177,88,179,89,181,90,183,91,185,92,187,93,189,94,191,95,193,
96,195,97,197,98,199,99,201,100,203,101,205,102,207,103,209,104,211,105,
213,106,215,107,217,108,219,109,221,110,223,111,225,112,227,113,229,0,231,
0,233,0,235,0,237,0,239,0,241,0,243,114,245,115,247,116,249,117,251,118,
3,0,1,2,15,3,0,10,10,13,13,8232,8233,1,0,48,57,2,0,48,57,95,95,1,0,48,49,
3,0,48,57,65,70,97,102,1,0,34,34,1,0,39,39,4,0,9,9,11,12,32,32,160,160,660,
0,65,90,95,95,97,122,170,170,181,181,186,186,192,214,216,246,248,705,710,
721,736,740,748,748,750,750,880,884,886,887,890,893,895,895,902,902,904,
906,908,908,910,929,931,1013,1015,1153,1162,1327,1329,1366,1369,1369,1376,
1416,1488,1514,1519,1522,1568,1610,1646,1647,1649,1747,1749,1749,1765,1766,
1774,1775,1786,1788,1791,1791,1808,1808,1810,1839,1869,1957,1969,1969,1994,
2026,2036,2037,2042,2042,2048,2069,2074,2074,2084,2084,2088,2088,2112,2136,
2144,2154,2160,2183,2185,2190,2208,2249,2308,2361,2365,2365,2384,2384,2392,
2401,2417,2432,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,
2493,2493,2510,2510,2524,2525,2527,2529,2544,2545,2556,2556,2565,2570,2575,
2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2649,2652,2654,2654,
2674,2676,2693,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2749,
2749,2768,2768,2784,2785,2809,2809,2821,2828,2831,2832,2835,2856,2858,2864,
2866,2867,2869,2873,2877,2877,2908,2909,2911,2913,2929,2929,2947,2947,2949,
2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,
2990,3001,3024,3024,3077,3084,3086,3088,3090,3112,3114,3129,3133,3133,3160,
3162,3165,3165,3168,3169,3200,3200,3205,3212,3214,3216,3218,3240,3242,3251,
3253,3257,3261,3261,3293,3294,3296,3297,3313,3314,3332,3340,3342,3344,3346,
3386,3389,3389,3406,3406,3412,3414,3423,3425,3450,3455,3461,3478,3482,3505,
3507,3515,3517,3517,3520,3526,3585,3632,3634,3635,3648,3654,3713,3714,3716,
3716,3718,3722,3724,3747,3749,3749,3751,3760,3762,3763,3773,3773,3776,3780,
3782,3782,3804,3807,3840,3840,3904,3911,3913,3948,3976,3980,4096,4138,4159,
4159,4176,4181,4186,4189,4193,4193,4197,4198,4206,4208,4213,4225,4238,4238,
4256,4293,4295,4295,4301,4301,4304,4346,4348,4680,4682,4685,4688,4694,4696,
4696,4698,4701,4704,4744,4746,4749,4752,4784,4786,4789,4792,4798,4800,4800,
4802,4805,4808,4822,4824,4880,4882,4885,4888,4954,4992,5007,5024,5109,5112,
5117,5121,5740,5743,5759,5761,5786,5792,5866,5873,5880,5888,5905,5919,5937,
5952,5969,5984,5996,5998,6000,6016,6067,6103,6103,6108,6108,6176,6264,6272,
6276,6279,6312,6314,6314,6320,6389,6400,6430,6480,6509,6512,6516,6528,6571,
6576,6601,6656,6678,6688,6740,6823,6823,6917,6963,6981,6988,7043,7072,7086,
7087,7098,7141,7168,7203,7245,7247,7258,7293,7296,7304,7312,7354,7357,7359,
7401,7404,7406,7411,7413,7414,7418,7418,7424,7615,7680,7957,7960,7965,7968,
8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,
8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,
8180,8182,8188,8305,8305,8319,8319,8336,8348,8450,8450,8455,8455,8458,8467,
8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8505,8508,
8511,8517,8521,8526,8526,8579,8580,11264,11492,11499,11502,11506,11507,11520,
11557,11559,11559,11565,11565,11568,11623,11631,11631,11648,11670,11680,
11686,11688,11694,11696,11702,11704,11710,11712,11718,11720,11726,11728,
11734,11736,11742,11823,11823,12293,12294,12337,12341,12347,12348,12353,
12438,12445,12447,12449,12538,12540,12543,12549,12591,12593,12686,12704,
12735,12784,12799,13312,19903,19968,42124,42192,42237,42240,42508,42512,
42527,42538,42539,42560,42606,42623,42653,42656,42725,42775,42783,42786,
42888,42891,42954,42960,42961,42963,42963,42965,42969,42994,43009,43011,
43013,43015,43018,43020,43042,43072,43123,43138,43187,43250,43255,43259,
43259,43261,43262,43274,43301,43312,43334,43360,43388,43396,43442,43471,
43471,43488,43492,43494,43503,43514,43518,43520,43560,43584,43586,43588,
43595,43616,43638,43642,43642,43646,43695,43697,43697,43701,43702,43705,
43709,43712,43712,43714,43714,43739,43741,43744,43754,43762,43764,43777,
43782,43785,43790,43793,43798,43808,43814,43816,43822,43824,43866,43868,
43881,43888,44002,44032,55203,55216,55238,55243,55291,63744,64109,64112,
64217,64256,64262,64275,64279,64285,64285,64287,64296,64298,64310,64312,
64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,
64911,64914,64967,65008,65019,65136,65140,65142,65276,65313,65338,65345,
65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500,65536,
65547,65549,65574,65576,65594,65596,65597,65599,65613,65616,65629,65664,
65786,66176,66204,66208,66256,66304,66335,66349,66368,66370,66377,66384,
66421,66432,66461,66464,66499,66504,66511,66560,66717,66736,66771,66776,
66811,66816,66855,66864,66915,66928,66938,66940,66954,66956,66962,66964,
66965,66967,66977,66979,66993,66995,67001,67003,67004,67072,67382,67392,
67413,67424,67431,67456,67461,67463,67504,67506,67514,67584,67589,67592,
67592,67594,67637,67639,67640,67644,67644,67647,67669,67680,67702,67712,
67742,67808,67826,67828,67829,67840,67861,67872,67897,67968,68023,68030,
68031,68096,68096,68112,68115,68117,68119,68121,68149,68192,68220,68224,
68252,68288,68295,68297,68324,68352,68405,68416,68437,68448,68466,68480,
68497,68608,68680,68736,68786,68800,68850,68864,68899,69248,69289,69296,
69297,69376,69404,69415,69415,69424,69445,69488,69505,69552,69572,69600,
69622,69635,69687,69745,69746,69749,69749,69763,69807,69840,69864,69891,
69926,69956,69956,69959,69959,69968,70002,70006,70006,70019,70066,70081,
70084,70106,70106,70108,70108,70144,70161,70163,70187,70207,70208,70272,
70278,70280,70280,70282,70285,70287,70301,70303,70312,70320,70366,70405,
70412,70415,70416,70419,70440,70442,70448,70450,70451,70453,70457,70461,
70461,70480,70480,70493,70497,70656,70708,70727,70730,70751,70753,70784,
70831,70852,70853,70855,70855,71040,71086,71128,71131,71168,71215,71236,
71236,71296,71338,71352,71352,71424,71450,71488,71494,71680,71723,71840,
71903,71935,71942,71945,71945,71948,71955,71957,71958,71960,71983,71999,
71999,72001,72001,72096,72103,72106,72144,72161,72161,72163,72163,72192,
72192,72203,72242,72250,72250,72272,72272,72284,72329,72349,72349,72368,
72440,72704,72712,72714,72750,72768,72768,72818,72847,72960,72966,72968,
72969,72971,73008,73030,73030,73056,73061,73063,73064,73066,73097,73112,
73112,73440,73458,73474,73474,73476,73488,73490,73523,73648,73648,73728,
74649,74880,75075,77712,77808,77824,78895,78913,78918,82944,83526,92160,
92728,92736,92766,92784,92862,92880,92909,92928,92975,92992,92995,93027,
93047,93053,93071,93760,93823,93952,94026,94032,94032,94099,94111,94176,
94177,94179,94179,94208,100343,100352,101589,101632,101640,110576,110579,
110581,110587,110589,110590,110592,110882,110898,110898,110928,110930,110933,
110933,110948,110951,110960,111355,113664,113770,113776,113788,113792,113800,
113808,113817,119808,119892,119894,119964,119966,119967,119970,119970,119973,
119974,119977,119980,119982,119993,119995,119995,119997,120003,120005,120069,
120071,120074,120077,120084,120086,120092,120094,120121,120123,120126,120128,
120132,120134,120134,120138,120144,120146,120485,120488,120512,120514,120538,
120540,120570,120572,120596,120598,120628,120630,120654,120656,120686,120688,
120712,120714,120744,120746,120770,120772,120779,122624,122654,122661,122666,
122928,122989,123136,123180,123191,123197,123214,123214,123536,123565,123584,
123627,124112,124139,124896,124902,124904,124907,124909,124910,124912,124926,
124928,125124,125184,125251,125259,125259,126464,126467,126469,126495,126497,
126498,126500,126500,126503,126503,126505,126514,126516,126519,126521,126521,
126523,126523,126530,126530,126535,126535,126537,126537,126539,126539,126541,
126543,126545,126546,126548,126548,126551,126551,126553,126553,126555,126555,
126557,126557,126559,126559,126561,126562,126564,126564,126567,126570,126572,
126578,126580,126583,126585,126588,126590,126590,126592,126601,126603,126619,
126625,126627,126629,126633,126635,126651,131072,173791,173824,177977,177984,
178205,178208,183969,183984,191456,194560,195101,196608,201546,201552,205743,
407,0,48,57,95,95,768,879,1155,1159,1425,1469,1471,1471,1473,1474,1476,1477,
1479,1479,1552,1562,1611,1641,1648,1648,1750,1756,1759,1764,1767,1768,1770,
1773,1776,1785,1809,1809,1840,1866,1958,1968,1984,1993,2027,2035,2045,2045,
2070,2073,2075,2083,2085,2087,2089,2093,2137,2139,2200,2207,2250,2273,2275,
2306,2362,2362,2364,2364,2369,2376,2381,2381,2385,2391,2402,2403,2406,2415,
2433,2433,2492,2492,2497,2500,2509,2509,2530,2531,2534,2543,2558,2558,2561,
2562,2620,2620,2625,2626,2631,2632,2635,2637,2641,2641,2662,2673,2677,2677,
2689,2690,2748,2748,2753,2757,2759,2760,2765,2765,2786,2787,2790,2799,2810,
2815,2817,2817,2876,2876,2879,2879,2881,2884,2893,2893,2901,2902,2914,2915,
2918,2927,2946,2946,3008,3008,3021,3021,3046,3055,3072,3072,3076,3076,3132,
3132,3134,3136,3142,3144,3146,3149,3157,3158,3170,3171,3174,3183,3201,3201,
3260,3260,3263,3263,3270,3270,3276,3277,3298,3299,3302,3311,3328,3329,3387,
3388,3393,3396,3405,3405,3426,3427,3430,3439,3457,3457,3530,3530,3538,3540,
3542,3542,3558,3567,3633,3633,3636,3642,3655,3662,3664,3673,3761,3761,3764,
3772,3784,3790,3792,3801,3864,3865,3872,3881,3893,3893,3895,3895,3897,3897,
3953,3966,3968,3972,3974,3975,3981,3991,3993,4028,4038,4038,4141,4144,4146,
4151,4153,4154,4157,4158,4160,4169,4184,4185,4190,4192,4209,4212,4226,4226,
4229,4230,4237,4237,4240,4249,4253,4253,4957,4959,5906,5908,5938,5939,5970,
5971,6002,6003,6068,6069,6071,6077,6086,6086,6089,6099,6109,6109,6112,6121,
6155,6157,6159,6169,6277,6278,6313,6313,6432,6434,6439,6440,6450,6450,6457,
6459,6470,6479,6608,6617,6679,6680,6683,6683,6742,6742,6744,6750,6752,6752,
6754,6754,6757,6764,6771,6780,6783,6793,6800,6809,6832,6845,6847,6862,6912,
6915,6964,6964,6966,6970,6972,6972,6978,6978,6992,7001,7019,7027,7040,7041,
7074,7077,7080,7081,7083,7085,7088,7097,7142,7142,7144,7145,7149,7149,7151,
7153,7212,7219,7222,7223,7232,7241,7248,7257,7376,7378,7380,7392,7394,7400,
7405,7405,7412,7412,7416,7417,7616,7679,8255,8256,8276,8276,8400,8412,8417,
8417,8421,8432,11503,11505,11647,11647,11744,11775,12330,12333,12441,12442,
42528,42537,42607,42607,42612,42621,42654,42655,42736,42737,43010,43010,
43014,43014,43019,43019,43045,43046,43052,43052,43204,43205,43216,43225,
43232,43249,43263,43273,43302,43309,43335,43345,43392,43394,43443,43443,
43446,43449,43452,43453,43472,43481,43493,43493,43504,43513,43561,43566,
43569,43570,43573,43574,43587,43587,43596,43596,43600,43609,43644,43644,
43696,43696,43698,43700,43703,43704,43710,43711,43713,43713,43756,43757,
43766,43766,44005,44005,44008,44008,44013,44013,44016,44025,64286,64286,
65024,65039,65056,65071,65075,65076,65101,65103,65296,65305,65343,65343,
66045,66045,66272,66272,66422,66426,66720,66729,68097,68099,68101,68102,
68108,68111,68152,68154,68159,68159,68325,68326,68900,68903,68912,68921,
69291,69292,69373,69375,69446,69456,69506,69509,69633,69633,69688,69702,
69734,69744,69747,69748,69759,69761,69811,69814,69817,69818,69826,69826,
69872,69881,69888,69890,69927,69931,69933,69940,69942,69951,70003,70003,
70016,70017,70070,70078,70089,70092,70095,70105,70191,70193,70196,70196,
70198,70199,70206,70206,70209,70209,70367,70367,70371,70378,70384,70393,
70400,70401,70459,70460,70464,70464,70502,70508,70512,70516,70712,70719,
70722,70724,70726,70726,70736,70745,70750,70750,70835,70840,70842,70842,
70847,70848,70850,70851,70864,70873,71090,71093,71100,71101,71103,71104,
71132,71133,71219,71226,71229,71229,71231,71232,71248,71257,71339,71339,
71341,71341,71344,71349,71351,71351,71360,71369,71453,71455,71458,71461,
71463,71467,71472,71481,71727,71735,71737,71738,71904,71913,71995,71996,
71998,71998,72003,72003,72016,72025,72148,72151,72154,72155,72160,72160,
72193,72202,72243,72248,72251,72254,72263,72263,72273,72278,72281,72283,
72330,72342,72344,72345,72752,72758,72760,72765,72767,72767,72784,72793,
72850,72871,72874,72880,72882,72883,72885,72886,73009,73014,73018,73018,
73020,73021,73023,73029,73031,73031,73040,73049,73104,73105,73109,73109,
73111,73111,73120,73129,73459,73460,73472,73473,73526,73530,73536,73536,
73538,73538,73552,73561,78912,78912,78919,78933,92768,92777,92864,92873,
92912,92916,92976,92982,93008,93017,94031,94031,94095,94098,94180,94180,
113821,113822,118528,118573,118576,118598,119143,119145,119163,119170,119173,
119179,119210,119213,119362,119364,120782,120831,121344,121398,121403,121452,
121461,121461,121476,121476,121499,121503,121505,121519,122880,122886,122888,
122904,122907,122913,122915,122916,122918,122922,123023,123023,123184,123190,
123200,123209,123566,123566,123628,123641,124140,124153,125136,125142,125252,
125258,125264,125273,130032,130041,917760,917999,4,0,10,10,13,13,34,34,92,
92,4,0,48,57,65,70,95,95,97,102,9,0,34,34,39,39,92,92,98,98,102,102,110,
110,114,114,116,116,118,118,1,0,49,57,6,0,10,10,13,13,34,34,92,92,123,123,
8232,8233,924,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,
0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,
57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,
0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,
0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,
0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,
0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,
0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,
0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,
143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,
1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,
0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,
0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,
0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,
0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,
205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,0,0,215,
1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,0,0,225,1,
0,0,0,0,227,1,0,0,0,1,243,1,0,0,0,1,245,1,0,0,0,2,247,1,0,0,0,2,249,1,0,
0,0,2,251,1,0,0,0,3,253,1,0,0,0,5,267,1,0,0,0,7,281,1,0,0,0,9,295,1,0,0,
0,11,300,1,0,0,0,13,302,1,0,0,0,15,305,1,0,0,0,17,308,1,0,0,0,19,311,1,0,
0,0,21,314,1,0,0,0,23,317,1,0,0,0,25,319,1,0,0,0,27,321,1,0,0,0,29,323,1,
0,0,0,31,325,1,0,0,0,33,330,1,0,0,0,35,332,1,0,0,0,37,338,1,0,0,0,39,342,
1,0,0,0,41,344,1,0,0,0,43,349,1,0,0,0,45,351,1,0,0,0,47,353,1,0,0,0,49,355,
1,0,0,0,51,358,1,0,0,0,53,361,1,0,0,0,55,363,1,0,0,0,57,365,1,0,0,0,59,371,
1,0,0,0,61,373,1,0,0,0,63,375,1,0,0,0,65,377,1,0,0,0,67,385,1,0,0,0,69,387,
1,0,0,0,71,390,1,0,0,0,73,392,1,0,0,0,75,395,1,0,0,0,77,399,1,0,0,0,79,402,
1,0,0,0,81,405,1,0,0,0,83,407,1,0,0,0,85,409,1,0,0,0,87,412,1,0,0,0,89,415,
1,0,0,0,91,422,1,0,0,0,93,424,1,0,0,0,95,426,1,0,0,0,97,428,1,0,0,0,99,435,
1,0,0,0,101,441,1,0,0,0,103,448,1,0,0,0,105,450,1,0,0,0,107,453,1,0,0,0,
109,456,1,0,0,0,111,459,1,0,0,0,113,462,1,0,0,0,115,465,1,0,0,0,117,469,
1,0,0,0,119,473,1,0,0,0,121,476,1,0,0,0,123,479,1,0,0,0,125,482,1,0,0,0,
127,484,1,0,0,0,129,486,1,0,0,0,131,497,1,0,0,0,133,499,1,0,0,0,135,502,
1,0,0,0,137,512,1,0,0,0,139,526,1,0,0,0,141,534,1,0,0,0,143,544,1,0,0,0,
145,550,1,0,0,0,147,556,1,0,0,0,149,561,1,0,0,0,151,564,1,0,0,0,153,569,
1,0,0,0,155,574,1,0,0,0,157,578,1,0,0,0,159,582,1,0,0,0,161,592,1,0,0,0,
163,598,1,0,0,0,165,606,1,0,0,0,167,613,1,0,0,0,169,622,1,0,0,0,171,626,
1,0,0,0,173,633,1,0,0,0,175,639,1,0,0,0,177,645,1,0,0,0,179,652,1,0,0,0,
181,661,1,0,0,0,183,666,1,0,0,0,185,674,1,0,0,0,187,677,1,0,0,0,189,683,
1,0,0,0,191,690,1,0,0,0,193,694,1,0,0,0,195,699,1,0,0,0,197,711,1,0,0,0,
199,718,1,0,0,0,201,723,1,0,0,0,203,729,1,0,0,0,205,733,1,0,0,0,207,742,
1,0,0,0,209,744,1,0,0,0,211,754,1,0,0,0,213,764,1,0,0,0,215,777,1,0,0,0,
217,784,1,0,0,0,219,793,1,0,0,0,221,824,1,0,0,0,223,827,1,0,0,0,225,833,
1,0,0,0,227,836,1,0,0,0,229,841,1,0,0,0,231,845,1,0,0,0,233,850,1,0,0,0,
235,855,1,0,0,0,237,857,1,0,0,0,239,866,1,0,0,0,241,876,1,0,0,0,243,879,
1,0,0,0,245,883,1,0,0,0,247,887,1,0,0,0,249,892,1,0,0,0,251,897,1,0,0,0,
253,254,5,47,0,0,254,255,5,42,0,0,255,259,1,0,0,0,256,258,9,0,0,0,257,256,
1,0,0,0,258,261,1,0,0,0,259,260,1,0,0,0,259,257,1,0,0,0,260,262,1,0,0,0,
261,259,1,0,0,0,262,263,5,42,0,0,263,264,5,47,0,0,264,265,1,0,0,0,265,266,
6,0,0,0,266,4,1,0,0,0,267,268,5,47,0,0,268,269,5,47,0,0,269,273,1,0,0,0,
270,272,8,0,0,0,271,270,1,0,0,0,272,275,1,0,0,0,273,271,1,0,0,0,273,274,
1,0,0,0,274,276,1,0,0,0,275,273,1,0,0,0,276,277,6,1,0,0,277,6,1,0,0,0,278,
280,8,0,0,0,279,278,1,0,0,0,280,283,1,0,0,0,281,279,1,0,0,0,281,282,1,0,
0,0,282,284,1,0,0,0,283,281,1,0,0,0,284,285,5,47,0,0,285,286,5,47,0,0,286,
290,1,0,0,0,287,289,8,0,0,0,288,287,1,0,0,0,289,292,1,0,0,0,290,288,1,0,
0,0,290,291,1,0,0,0,291,293,1,0,0,0,292,290,1,0,0,0,293,294,6,2,0,0,294,
8,1,0,0,0,295,296,5,92,0,0,296,297,3,225,111,0,297,298,1,0,0,0,298,299,6,
3,1,0,299,10,1,0,0,0,300,301,5,91,0,0,301,12,1,0,0,0,302,303,5,91,0,0,303,
304,5,124,0,0,304,14,1,0,0,0,305,306,5,91,0,0,306,307,5,63,0,0,307,16,1,
0,0,0,308,309,5,91,0,0,309,310,5,35,0,0,310,18,1,0,0,0,311,312,5,91,0,0,
312,313,5,64,0,0,313,20,1,0,0,0,314,315,5,91,0,0,315,316,5,36,0,0,316,22,
1,0,0,0,317,318,5,93,0,0,318,24,1,0,0,0,319,320,5,40,0,0,320,26,1,0,0,0,
321,322,5,41,0,0,322,28,1,0,0,0,323,324,5,123,0,0,324,30,1,0,0,0,325,326,
5,125,0,0,326,327,4,14,0,0,327,328,1,0,0,0,328,329,6,14,2,0,329,32,1,0,0,
0,330,331,5,125,0,0,331,34,1,0,0,0,332,333,5,98,0,0,333,334,5,101,0,0,334,
335,5,103,0,0,335,336,5,105,0,0,336,337,5,110,0,0,337,36,1,0,0,0,338,339,
5,101,0,0,339,340,5,110,0,0,340,341,5,100,0,0,341,38,1,0,0,0,342,343,5,59,
0,0,343,40,1,0,0,0,344,345,5,44,0,0,345,42,1,0,0,0,346,350,5,61,0,0,347,
348,5,58,0,0,348,350,5,61,0,0,349,346,1,0,0,0,349,347,1,0,0,0,350,44,1,0,
0,0,351,352,5,58,0,0,352,46,1,0,0,0,353,354,5,46,0,0,354,48,1,0,0,0,355,
356,5,43,0,0,356,357,5,43,0,0,357,50,1,0,0,0,358,359,5,45,0,0,359,360,5,
45,0,0,360,52,1,0,0,0,361,362,5,43,0,0,362,54,1,0,0,0,363,364,5,45,0,0,364,
56,1,0,0,0,365,366,5,126,0,0,366,58,1,0,0,0,367,372,5,33,0,0,368,369,5,110,
0,0,369,370,5,111,0,0,370,372,5,116,0,0,371,367,1,0,0,0,371,368,1,0,0,0,
372,60,1,0,0,0,373,374,5,42,0,0,374,62,1,0,0,0,375,376,5,47,0,0,376,64,1,
0,0,0,377,378,5,100,0,0,378,379,5,105,0,0,379,380,5,118,0,0,380,66,1,0,0,
0,381,386,5,37,0,0,382,383,5,109,0,0,383,384,5,111,0,0,384,386,5,100,0,0,
385,381,1,0,0,0,385,382,1,0,0,0,386,68,1,0,0,0,387,388,5,42,0,0,388,389,
5,42,0,0,389,70,1,0,0,0,390,391,5,63,0,0,391,72,1,0,0,0,392,393,5,63,0,0,
393,394,5,63,0,0,394,74,1,0,0,0,395,396,5,63,0,0,396,397,5,63,0,0,397,398,
5,61,0,0,398,76,1,0,0,0,399,400,5,62,0,0,400,401,5,62,0,0,401,78,1,0,0,0,
402,403,5,60,0,0,403,404,5,60,0,0,404,80,1,0,0,0,405,406,5,60,0,0,406,82,
1,0,0,0,407,408,5,62,0,0,408,84,1,0,0,0,409,410,5,60,0,0,410,411,5,61,0,
0,411,86,1,0,0,0,412,413,5,62,0,0,413,414,5,61,0,0,414,88,1,0,0,0,415,416,
5,61,0,0,416,417,5,61,0,0,417,90,1,0,0,0,418,419,5,33,0,0,419,423,5,61,0,
0,420,421,5,60,0,0,421,423,5,62,0,0,422,418,1,0,0,0,422,420,1,0,0,0,423,
92,1,0,0,0,424,425,5,38,0,0,425,94,1,0,0,0,426,427,5,94,0,0,427,96,1,0,0,
0,428,429,5,124,0,0,429,98,1,0,0,0,430,431,5,38,0,0,431,436,5,38,0,0,432,
433,5,97,0,0,433,434,5,110,0,0,434,436,5,100,0,0,435,430,1,0,0,0,435,432,
1,0,0,0,436,100,1,0,0,0,437,438,5,124,0,0,438,442,5,124,0,0,439,440,5,111,
0,0,440,442,5,114,0,0,441,437,1,0,0,0,441,439,1,0,0,0,442,102,1,0,0,0,443,
444,5,94,0,0,444,449,5,94,0,0,445,446,5,120,0,0,446,447,5,111,0,0,447,449,
5,114,0,0,448,443,1,0,0,0,448,445,1,0,0,0,449,104,1,0,0,0,450,451,5,42,0,
0,451,452,5,61,0,0,452,106,1,0,0,0,453,454,5,47,0,0,454,455,5,61,0,0,455,
108,1,0,0,0,456,457,5,43,0,0,457,458,5,61,0,0,458,110,1,0,0,0,459,460,5,
45,0,0,460,461,5,61,0,0,461,112,1,0,0,0,462,463,5,37,0,0,463,464,5,61,0,
0,464,114,1,0,0,0,465,466,5,60,0,0,466,467,5,60,0,0,467,468,5,61,0,0,468,
116,1,0,0,0,469,470,5,62,0,0,470,471,5,62,0,0,471,472,5,61,0,0,472,118,1,
0,0,0,473,474,5,38,0,0,474,475,5,61,0,0,475,120,1,0,0,0,476,477,5,94,0,0,
477,478,5,61,0,0,478,122,1,0,0,0,479,480,5,124,0,0,480,481,5,61,0,0,481,
124,1,0,0,0,482,483,5,35,0,0,483,126,1,0,0,0,484,485,5,36,0,0,485,128,1,
0,0,0,486,487,5,64,0,0,487,130,1,0,0,0,488,489,5,116,0,0,489,490,5,114,0,
0,490,491,5,117,0,0,491,498,5,101,0,0,492,493,5,102,0,0,493,494,5,97,0,0,
494,495,5,108,0,0,495,496,5,115,0,0,496,498,5,101,0,0,497,488,1,0,0,0,497,
492,1,0,0,0,498,132,1,0,0,0,499,500,3,241,119,0,500,134,1,0,0,0,501,503,
3,241,119,0,502,501,1,0,0,0,502,503,1,0,0,0,503,504,1,0,0,0,504,505,5,46,
0,0,505,509,7,1,0,0,506,508,7,2,0,0,507,506,1,0,0,0,508,511,1,0,0,0,509,
507,1,0,0,0,509,510,1,0,0,0,510,136,1,0,0,0,511,509,1,0,0,0,512,513,5,48,
0,0,513,514,5,98,0,0,514,522,1,0,0,0,515,517,5,95,0,0,516,515,1,0,0,0,517,
520,1,0,0,0,518,516,1,0,0,0,518,519,1,0,0,0,519,521,1,0,0,0,520,518,1,0,
0,0,521,523,7,3,0,0,522,518,1,0,0,0,523,524,1,0,0,0,524,522,1,0,0,0,524,
525,1,0,0,0,525,138,1,0,0,0,526,527,3,235,116,0,527,531,7,4,0,0,528,530,
3,237,117,0,529,528,1,0,0,0,530,533,1,0,0,0,531,529,1,0,0,0,531,532,1,0,
0,0,532,140,1,0,0,0,533,531,1,0,0,0,534,535,5,117,0,0,535,536,5,110,0,0,
536,537,5,100,0,0,537,538,5,101,0,0,538,539,5,102,0,0,539,540,5,105,0,0,
540,541,5,110,0,0,541,542,5,101,0,0,542,543,5,100,0,0,543,142,1,0,0,0,544,
545,5,110,0,0,545,546,5,111,0,0,546,547,5,111,0,0,547,548,5,110,0,0,548,
549,5,101,0,0,549,144,1,0,0,0,550,551,5,98,0,0,551,552,5,114,0,0,552,553,
5,101,0,0,553,554,5,97,0,0,554,555,5,107,0,0,555,146,1,0,0,0,556,557,5,101,
0,0,557,558,5,120,0,0,558,559,5,105,0,0,559,560,5,116,0,0,560,148,1,0,0,
0,561,562,5,100,0,0,562,563,5,111,0,0,563,150,1,0,0,0,564,565,5,99,0,0,565,
566,5,97,0,0,566,567,5,115,0,0,567,568,5,101,0,0,568,152,1,0,0,0,569,570,
5,101,0,0,570,571,5,108,0,0,571,572,5,115,0,0,572,573,5,101,0,0,573,154,
1,0,0,0,574,575,5,110,0,0,575,576,5,101,0,0,576,577,5,119,0,0,577,156,1,
0,0,0,578,579,5,118,0,0,579,580,5,97,0,0,580,581,5,114,0,0,581,158,1,0,0,
0,582,583,5,103,0,0,583,584,5,108,0,0,584,585,5,111,0,0,585,586,5,98,0,0,
586,587,5,97,0,0,587,588,5,108,0,0,588,589,5,118,0,0,589,590,5,97,0,0,590,
591,5,114,0,0,591,160,1,0,0,0,592,593,5,99,0,0,593,594,5,97,0,0,594,595,
5,116,0,0,595,596,5,99,0,0,596,597,5,104,0,0,597,162,1,0,0,0,598,599,5,102,
0,0,599,600,5,105,0,0,600,601,5,110,0,0,601,602,5,97,0,0,602,603,5,108,0,
0,603,604,5,108,0,0,604,605,5,121,0,0,605,164,1,0,0,0,606,607,5,114,0,0,
607,608,5,101,0,0,608,609,5,116,0,0,609,610,5,117,0,0,610,611,5,114,0,0,
611,612,5,110,0,0,612,166,1,0,0,0,613,614,5,99,0,0,614,615,5,111,0,0,615,
616,5,110,0,0,616,617,5,116,0,0,617,618,5,105,0,0,618,619,5,110,0,0,619,
620,5,117,0,0,620,621,5,101,0,0,621,168,1,0,0,0,622,623,5,102,0,0,623,624,
5,111,0,0,624,625,5,114,0,0,625,170,1,0,0,0,626,627,5,115,0,0,627,628,5,
119,0,0,628,629,5,105,0,0,629,630,5,116,0,0,630,631,5,99,0,0,631,632,5,104,
0,0,632,172,1,0,0,0,633,634,5,119,0,0,634,635,5,104,0,0,635,636,5,105,0,
0,636,637,5,108,0,0,637,638,5,101,0,0,638,174,1,0,0,0,639,640,5,117,0,0,
640,641,5,110,0,0,641,642,5,116,0,0,642,643,5,105,0,0,643,644,5,108,0,0,
644,176,1,0,0,0,645,646,5,114,0,0,646,647,5,101,0,0,647,648,5,112,0,0,648,
649,5,101,0,0,649,650,5,97,0,0,650,651,5,116,0,0,651,178,1,0,0,0,652,653,
5,102,0,0,653,654,5,117,0,0,654,655,5,110,0,0,655,656,5,99,0,0,656,657,5,
116,0,0,657,658,5,105,0,0,658,659,5,111,0,0,659,660,5,110,0,0,660,180,1,
0,0,0,661,662,5,119,0,0,662,663,5,105,0,0,663,664,5,116,0,0,664,665,5,104,
0,0,665,182,1,0,0,0,666,667,5,100,0,0,667,668,5,101,0,0,668,669,5,102,0,
0,669,670,5,97,0,0,670,671,5,117,0,0,671,672,5,108,0,0,672,673,5,116,0,0,
673,184,1,0,0,0,674,675,5,105,0,0,675,676,5,102,0,0,676,186,1,0,0,0,677,
678,5,116,0,0,678,679,5,104,0,0,679,680,5,114,0,0,680,681,5,111,0,0,681,
682,5,119,0,0,682,188,1,0,0,0,683,684,5,100,0,0,684,685,5,101,0,0,685,686,
5,108,0,0,686,687,5,101,0,0,687,688,5,116,0,0,688,689,5,101,0,0,689,190,
1,0,0,0,690,691,5,116,0,0,691,692,5,114,0,0,692,693,5,121,0,0,693,192,1,
0,0,0,694,695,5,101,0,0,695,696,5,110,0,0,696,697,5,117,0,0,697,698,5,109,
0,0,698,194,1,0,0,0,699,700,5,99,0,0,700,701,5,111,0,0,701,702,5,110,0,0,
702,703,5,115,0,0,703,704,5,116,0,0,704,705,5,114,0,0,705,706,5,117,0,0,
706,707,5,99,0,0,707,708,5,116,0,0,708,709,5,111,0,0,709,710,5,114,0,0,710,
196,1,0,0,0,711,712,5,115,0,0,712,713,5,116,0,0,713,714,5,97,0,0,714,715,
5,116,0,0,715,716,5,105,0,0,716,717,5,99,0,0,717,198,1,0,0,0,718,719,5,115,
0,0,719,720,5,101,0,0,720,721,5,108,0,0,721,722,5,102,0,0,722,200,1,0,0,
0,723,724,5,111,0,0,724,725,5,116,0,0,725,726,5,104,0,0,726,727,5,101,0,
0,727,728,5,114,0,0,728,202,1,0,0,0,729,730,5,97,0,0,730,731,5,108,0,0,731,
732,5,108,0,0,732,204,1,0,0,0,733,734,5,35,0,0,734,735,5,109,0,0,735,736,
5,97,0,0,736,737,5,99,0,0,737,738,5,114,0,0,738,739,5,111,0,0,739,740,1,
0,0,0,740,741,6,101,3,0,741,206,1,0,0,0,742,743,5,92,0,0,743,208,1,0,0,0,
744,745,5,35,0,0,745,746,5,100,0,0,746,747,5,101,0,0,747,748,5,102,0,0,748,
749,5,105,0,0,749,750,5,110,0,0,750,751,5,101,0,0,751,752,1,0,0,0,752,753,
6,103,4,0,753,210,1,0,0,0,754,755,5,35,0,0,755,756,5,114,0,0,756,757,5,101,
0,0,757,758,5,103,0,0,758,759,5,105,0,0,759,760,5,111,0,0,760,761,5,110,
0,0,761,762,1,0,0,0,762,763,6,104,4,0,763,212,1,0,0,0,764,765,5,35,0,0,765,
766,5,101,0,0,766,767,5,110,0,0,767,768,5,100,0,0,768,769,5,114,0,0,769,
770,5,101,0,0,770,771,5,103,0,0,771,772,5,105,0,0,772,773,5,111,0,0,773,
774,5,110,0,0,774,775,1,0,0,0,775,776,6,105,4,0,776,214,1,0,0,0,777,781,
3,229,113,0,778,780,3,231,114,0,779,778,1,0,0,0,780,783,1,0,0,0,781,779,
1,0,0,0,781,782,1,0,0,0,782,216,1,0,0,0,783,781,1,0,0,0,784,788,5,34,0,0,
785,787,3,233,115,0,786,785,1,0,0,0,787,790,1,0,0,0,788,786,1,0,0,0,788,
789,1,0,0,0,789,791,1,0,0,0,790,788,1,0,0,0,791,792,5,34,0,0,792,218,1,0,
0,0,793,794,5,36,0,0,794,795,5,34,0,0,795,796,1,0,0,0,796,797,6,108,5,0,
797,798,1,0,0,0,798,799,6,108,6,0,799,220,1,0,0,0,800,801,5,64,0,0,801,802,
5,34,0,0,802,808,1,0,0,0,803,807,8,5,0,0,804,805,5,34,0,0,805,807,5,34,0,
0,806,803,1,0,0,0,806,804,1,0,0,0,807,810,1,0,0,0,808,806,1,0,0,0,808,809,
1,0,0,0,809,811,1,0,0,0,810,808,1,0,0,0,811,825,5,34,0,0,812,813,5,64,0,
0,813,814,5,39,0,0,814,820,1,0,0,0,815,819,8,6,0,0,816,817,5,39,0,0,817,
819,5,39,0,0,818,815,1,0,0,0,818,816,1,0,0,0,819,822,1,0,0,0,820,818,1,0,
0,0,820,821,1,0,0,0,821,823,1,0,0,0,822,820,1,0,0,0,823,825,5,39,0,0,824,
800,1,0,0,0,824,812,1,0,0,0,825,222,1,0,0,0,826,828,7,7,0,0,827,826,1,0,
0,0,828,829,1,0,0,0,829,827,1,0,0,0,829,830,1,0,0,0,830,831,1,0,0,0,831,
832,6,110,0,0,832,224,1,0,0,0,833,834,7,0,0,0,834,835,6,111,7,0,835,226,
1,0,0,0,836,837,9,0,0,0,837,838,1,0,0,0,838,839,6,112,8,0,839,228,1,0,0,
0,840,842,7,8,0,0,841,840,1,0,0,0,842,230,1,0,0,0,843,846,3,229,113,0,844,
846,7,9,0,0,845,843,1,0,0,0,845,844,1,0,0,0,846,232,1,0,0,0,847,851,8,10,
0,0,848,849,5,92,0,0,849,851,3,239,118,0,850,847,1,0,0,0,850,848,1,0,0,0,
851,234,1,0,0,0,852,853,5,48,0,0,853,856,5,120,0,0,854,856,2,35,36,0,855,
852,1,0,0,0,855,854,1,0,0,0,856,236,1,0,0,0,857,858,7,11,0,0,858,238,1,0,
0,0,859,867,7,12,0,0,860,861,5,117,0,0,861,862,3,237,117,0,862,863,3,237,
117,0,863,864,3,237,117,0,864,865,3,237,117,0,865,867,1,0,0,0,866,859,1,
0,0,0,866,860,1,0,0,0,867,240,1,0,0,0,868,877,5,48,0,0,869,873,7,13,0,0,
870,872,7,2,0,0,871,870,1,0,0,0,872,875,1,0,0,0,873,871,1,0,0,0,873,874,
1,0,0,0,874,877,1,0,0,0,875,873,1,0,0,0,876,868,1,0,0,0,876,869,1,0,0,0,
877,242,1,0,0,0,878,880,8,0,0,0,879,878,1,0,0,0,880,881,1,0,0,0,881,879,
1,0,0,0,881,882,1,0,0,0,882,244,1,0,0,0,883,884,7,0,0,0,884,885,1,0,0,0,
885,886,6,121,2,0,886,246,1,0,0,0,887,888,5,34,0,0,888,889,6,122,9,0,889,
890,1,0,0,0,890,891,6,122,2,0,891,248,1,0,0,0,892,893,5,123,0,0,893,894,
1,0,0,0,894,895,6,123,10,0,895,250,1,0,0,0,896,898,8,14,0,0,897,896,1,0,
0,0,898,899,1,0,0,0,899,897,1,0,0,0,899,900,1,0,0,0,900,252,1,0,0,0,37,0,
1,2,259,273,281,290,349,371,385,422,435,441,448,497,502,509,518,524,531,
781,788,806,808,818,820,824,829,841,845,850,855,866,873,876,881,899,11,0,
1,0,6,0,0,4,0,0,1,101,0,5,1,0,1,108,1,5,2,0,1,111,2,0,2,0,1,122,3,5,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class GameMakerLanguageLexer extends antlr4.Lexer {

    static grammarFileName = "GameMakerLanguageLexer.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR" ];
	static modeNames = [ "DEFAULT_MODE", "REGION_NAME", "TEMPLATE_STRING" ];
	static literalNames = [ null, null, null, null, null, "'['", "'[|'", "'[?'", 
                         "'[#'", "'[@'", "'[$'", "']'", "'('", "')'", null, 
                         null, "'}'", "'begin'", "'end'", "';'", "','", 
                         null, "':'", "'.'", "'++'", "'--'", "'+'", "'-'", 
                         "'~'", null, "'*'", "'/'", "'div'", null, "'**'", 
                         "'?'", "'??'", "'??='", "'>>'", "'<<'", "'<'", 
                         "'>'", "'<='", "'>='", "'=='", null, "'&'", "'^'", 
                         "'|'", null, null, null, "'*='", "'/='", "'+='", 
                         "'-='", "'%='", "'<<='", "'>>='", "'&='", "'^='", 
                         "'|='", "'#'", "'$'", "'@'", null, null, null, 
                         null, null, "'undefined'", "'noone'", "'break'", 
                         "'exit'", "'do'", "'case'", "'else'", "'new'", 
                         "'var'", "'globalvar'", "'catch'", "'finally'", 
                         "'return'", "'continue'", "'for'", "'switch'", 
                         "'while'", "'until'", "'repeat'", "'function'", 
                         "'with'", "'default'", "'if'", "'throw'", "'delete'", 
                         "'try'", "'enum'", "'constructor'", "'static'", 
                         "'self'", "'other'", "'all'", "'#macro'", "'\\'", 
                         "'#define'", "'#region'", "'#endregion'" ];
	static symbolicNames = [ null, "MultiLineComment", "SingleLineComment", 
                          "InlineComment", "LineContinuation", "OpenBracket", 
                          "ListAccessor", "MapAccessor", "GridAccessor", 
                          "ArrayAccessor", "StructAccessor", "CloseBracket", 
                          "OpenParen", "CloseParen", "OpenBrace", "TemplateStringEndExpression", 
                          "CloseBrace", "Begin", "End", "SemiColon", "Comma", 
                          "Assign", "Colon", "Dot", "PlusPlus", "MinusMinus", 
                          "Plus", "Minus", "BitNot", "Not", "Multiply", 
                          "Divide", "IntegerDivide", "Modulo", "Power", 
                          "QuestionMark", "NullCoalesce", "NullCoalescingAssign", 
                          "RightShiftArithmetic", "LeftShiftArithmetic", 
                          "LessThan", "MoreThan", "LessThanEquals", "GreaterThanEquals", 
                          "Equals_", "NotEquals", "BitAnd", "BitXOr", "BitOr", 
                          "And", "Or", "Xor", "MultiplyAssign", "DivideAssign", 
                          "PlusAssign", "MinusAssign", "ModulusAssign", 
                          "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", 
                          "BitAndAssign", "BitXorAssign", "BitOrAssign", 
                          "NumberSign", "DollarSign", "AtSign", "BooleanLiteral", 
                          "IntegerLiteral", "DecimalLiteral", "BinaryLiteral", 
                          "HexIntegerLiteral", "Undefined", "NoOne", "Break", 
                          "Exit", "Do", "Case", "Else", "New", "Var", "GlobalVar", 
                          "Catch", "Finally", "Return", "Continue", "For", 
                          "Switch", "While", "Until", "Repeat", "Function", 
                          "With", "Default", "If", "Throw", "Delete", "Try", 
                          "Enum", "Constructor", "Static", "Self", "Other", 
                          "All", "Macro", "EscapedNewLine", "Define", "Region", 
                          "EndRegion", "Identifier", "StringLiteral", "TemplateStringStart", 
                          "VerbatimStringLiteral", "WhiteSpaces", "LineTerminator", 
                          "UnexpectedCharacter", "RegionCharacters", "RegionEOL", 
                          "TemplateStringEnd", "TemplateStringStartExpression", 
                          "TemplateStringText" ];
	static ruleNames = [ "MultiLineComment", "SingleLineComment", "InlineComment", 
                      "LineContinuation", "OpenBracket", "ListAccessor", 
                      "MapAccessor", "GridAccessor", "ArrayAccessor", "StructAccessor", 
                      "CloseBracket", "OpenParen", "CloseParen", "OpenBrace", 
                      "TemplateStringEndExpression", "CloseBrace", "Begin", 
                      "End", "SemiColon", "Comma", "Assign", "Colon", "Dot", 
                      "PlusPlus", "MinusMinus", "Plus", "Minus", "BitNot", 
                      "Not", "Multiply", "Divide", "IntegerDivide", "Modulo", 
                      "Power", "QuestionMark", "NullCoalesce", "NullCoalescingAssign", 
                      "RightShiftArithmetic", "LeftShiftArithmetic", "LessThan", 
                      "MoreThan", "LessThanEquals", "GreaterThanEquals", 
                      "Equals_", "NotEquals", "BitAnd", "BitXOr", "BitOr", 
                      "And", "Or", "Xor", "MultiplyAssign", "DivideAssign", 
                      "PlusAssign", "MinusAssign", "ModulusAssign", "LeftShiftArithmeticAssign", 
                      "RightShiftArithmeticAssign", "BitAndAssign", "BitXorAssign", 
                      "BitOrAssign", "NumberSign", "DollarSign", "AtSign", 
                      "BooleanLiteral", "IntegerLiteral", "DecimalLiteral", 
                      "BinaryLiteral", "HexIntegerLiteral", "Undefined", 
                      "NoOne", "Break", "Exit", "Do", "Case", "Else", "New", 
                      "Var", "GlobalVar", "Catch", "Finally", "Return", 
                      "Continue", "For", "Switch", "While", "Until", "Repeat", 
                      "Function", "With", "Default", "If", "Throw", "Delete", 
                      "Try", "Enum", "Constructor", "Static", "Self", "Other", 
                      "All", "Macro", "EscapedNewLine", "Define", "Region", 
                      "EndRegion", "Identifier", "StringLiteral", "TemplateStringStart", 
                      "VerbatimStringLiteral", "WhiteSpaces", "LineTerminator", 
                      "UnexpectedCharacter", "IdentifierStart", "IdentifierPart", 
                      "StringCharacter", "HexLiteralPrefix", "HexDigit", 
                      "SingleEscapeCharacter", "DecimalIntegerLiteral", 
                      "RegionCharacters", "RegionEOL", "TemplateStringEnd", 
                      "TemplateStringStartExpression", "TemplateStringText" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());

            var ignoreNewline = true;
            var lastTokenType = -4;
            var templateDepth = 0;

            function nextToken() {
                var next = antlr4.Lexer.prototype.nextToken.call(this);
                if (next.channel === antlr4.Lexer.DEFAULT_TOKEN_CHANNEL) {
                    this.lastTokenType = next.type;
                }
                return next;
            }

    }
}

GameMakerLanguageLexer.EOF = antlr4.Token.EOF;
GameMakerLanguageLexer.MultiLineComment = 1;
GameMakerLanguageLexer.SingleLineComment = 2;
GameMakerLanguageLexer.InlineComment = 3;
GameMakerLanguageLexer.LineContinuation = 4;
GameMakerLanguageLexer.OpenBracket = 5;
GameMakerLanguageLexer.ListAccessor = 6;
GameMakerLanguageLexer.MapAccessor = 7;
GameMakerLanguageLexer.GridAccessor = 8;
GameMakerLanguageLexer.ArrayAccessor = 9;
GameMakerLanguageLexer.StructAccessor = 10;
GameMakerLanguageLexer.CloseBracket = 11;
GameMakerLanguageLexer.OpenParen = 12;
GameMakerLanguageLexer.CloseParen = 13;
GameMakerLanguageLexer.OpenBrace = 14;
GameMakerLanguageLexer.TemplateStringEndExpression = 15;
GameMakerLanguageLexer.CloseBrace = 16;
GameMakerLanguageLexer.Begin = 17;
GameMakerLanguageLexer.End = 18;
GameMakerLanguageLexer.SemiColon = 19;
GameMakerLanguageLexer.Comma = 20;
GameMakerLanguageLexer.Assign = 21;
GameMakerLanguageLexer.Colon = 22;
GameMakerLanguageLexer.Dot = 23;
GameMakerLanguageLexer.PlusPlus = 24;
GameMakerLanguageLexer.MinusMinus = 25;
GameMakerLanguageLexer.Plus = 26;
GameMakerLanguageLexer.Minus = 27;
GameMakerLanguageLexer.BitNot = 28;
GameMakerLanguageLexer.Not = 29;
GameMakerLanguageLexer.Multiply = 30;
GameMakerLanguageLexer.Divide = 31;
GameMakerLanguageLexer.IntegerDivide = 32;
GameMakerLanguageLexer.Modulo = 33;
GameMakerLanguageLexer.Power = 34;
GameMakerLanguageLexer.QuestionMark = 35;
GameMakerLanguageLexer.NullCoalesce = 36;
GameMakerLanguageLexer.NullCoalescingAssign = 37;
GameMakerLanguageLexer.RightShiftArithmetic = 38;
GameMakerLanguageLexer.LeftShiftArithmetic = 39;
GameMakerLanguageLexer.LessThan = 40;
GameMakerLanguageLexer.MoreThan = 41;
GameMakerLanguageLexer.LessThanEquals = 42;
GameMakerLanguageLexer.GreaterThanEquals = 43;
GameMakerLanguageLexer.Equals_ = 44;
GameMakerLanguageLexer.NotEquals = 45;
GameMakerLanguageLexer.BitAnd = 46;
GameMakerLanguageLexer.BitXOr = 47;
GameMakerLanguageLexer.BitOr = 48;
GameMakerLanguageLexer.And = 49;
GameMakerLanguageLexer.Or = 50;
GameMakerLanguageLexer.Xor = 51;
GameMakerLanguageLexer.MultiplyAssign = 52;
GameMakerLanguageLexer.DivideAssign = 53;
GameMakerLanguageLexer.PlusAssign = 54;
GameMakerLanguageLexer.MinusAssign = 55;
GameMakerLanguageLexer.ModulusAssign = 56;
GameMakerLanguageLexer.LeftShiftArithmeticAssign = 57;
GameMakerLanguageLexer.RightShiftArithmeticAssign = 58;
GameMakerLanguageLexer.BitAndAssign = 59;
GameMakerLanguageLexer.BitXorAssign = 60;
GameMakerLanguageLexer.BitOrAssign = 61;
GameMakerLanguageLexer.NumberSign = 62;
GameMakerLanguageLexer.DollarSign = 63;
GameMakerLanguageLexer.AtSign = 64;
GameMakerLanguageLexer.BooleanLiteral = 65;
GameMakerLanguageLexer.IntegerLiteral = 66;
GameMakerLanguageLexer.DecimalLiteral = 67;
GameMakerLanguageLexer.BinaryLiteral = 68;
GameMakerLanguageLexer.HexIntegerLiteral = 69;
GameMakerLanguageLexer.Undefined = 70;
GameMakerLanguageLexer.NoOne = 71;
GameMakerLanguageLexer.Break = 72;
GameMakerLanguageLexer.Exit = 73;
GameMakerLanguageLexer.Do = 74;
GameMakerLanguageLexer.Case = 75;
GameMakerLanguageLexer.Else = 76;
GameMakerLanguageLexer.New = 77;
GameMakerLanguageLexer.Var = 78;
GameMakerLanguageLexer.GlobalVar = 79;
GameMakerLanguageLexer.Catch = 80;
GameMakerLanguageLexer.Finally = 81;
GameMakerLanguageLexer.Return = 82;
GameMakerLanguageLexer.Continue = 83;
GameMakerLanguageLexer.For = 84;
GameMakerLanguageLexer.Switch = 85;
GameMakerLanguageLexer.While = 86;
GameMakerLanguageLexer.Until = 87;
GameMakerLanguageLexer.Repeat = 88;
GameMakerLanguageLexer.Function = 89;
GameMakerLanguageLexer.With = 90;
GameMakerLanguageLexer.Default = 91;
GameMakerLanguageLexer.If = 92;
GameMakerLanguageLexer.Throw = 93;
GameMakerLanguageLexer.Delete = 94;
GameMakerLanguageLexer.Try = 95;
GameMakerLanguageLexer.Enum = 96;
GameMakerLanguageLexer.Constructor = 97;
GameMakerLanguageLexer.Static = 98;
GameMakerLanguageLexer.Self = 99;
GameMakerLanguageLexer.Other = 100;
GameMakerLanguageLexer.All = 101;
GameMakerLanguageLexer.Macro = 102;
GameMakerLanguageLexer.EscapedNewLine = 103;
GameMakerLanguageLexer.Define = 104;
GameMakerLanguageLexer.Region = 105;
GameMakerLanguageLexer.EndRegion = 106;
GameMakerLanguageLexer.Identifier = 107;
GameMakerLanguageLexer.StringLiteral = 108;
GameMakerLanguageLexer.TemplateStringStart = 109;
GameMakerLanguageLexer.VerbatimStringLiteral = 110;
GameMakerLanguageLexer.WhiteSpaces = 111;
GameMakerLanguageLexer.LineTerminator = 112;
GameMakerLanguageLexer.UnexpectedCharacter = 113;
GameMakerLanguageLexer.RegionCharacters = 114;
GameMakerLanguageLexer.RegionEOL = 115;
GameMakerLanguageLexer.TemplateStringEnd = 116;
GameMakerLanguageLexer.TemplateStringStartExpression = 117;
GameMakerLanguageLexer.TemplateStringText = 118;

GameMakerLanguageLexer.ERROR = 2;

GameMakerLanguageLexer.REGION_NAME = 1;
GameMakerLanguageLexer.TEMPLATE_STRING = 2;


GameMakerLanguageLexer.prototype.action = function(localctx, ruleIndex, actionIndex) {
	switch (ruleIndex) {
	case 101:
		this.Macro_action(localctx, actionIndex);
		break;
	case 108:
		this.TemplateStringStart_action(localctx, actionIndex);
		break;
	case 111:
		this.LineTerminator_action(localctx, actionIndex);
		break;
	case 122:
		this.TemplateStringEnd_action(localctx, actionIndex);
		break;
	default:
		throw "No registered action for:" + ruleIndex;
	}
};


GameMakerLanguageLexer.prototype.Macro_action = function(localctx , actionIndex) {
	switch (actionIndex) {
	case 0:
		ignoreNewline = false;
		break;
	default:
		throw "No registered action for:" + actionIndex;
	}
};

GameMakerLanguageLexer.prototype.TemplateStringStart_action = function(localctx , actionIndex) {
	switch (actionIndex) {
	case 1:
		templateDepth++;
		break;
	default:
		throw "No registered action for:" + actionIndex;
	}
};

GameMakerLanguageLexer.prototype.LineTerminator_action = function(localctx , actionIndex) {
	switch (actionIndex) {
	case 2:

		        if (ignoreNewline) {
		            Channel = Lexer.Hidden;
		        }
		        if (lastTokenType == GameMakerLanguageLexer.EscapedNewLine) {
		            Channel = Lexer.Hidden;
		        } else {
		            ignoreNewline = true;
		        }
		    
		break;
	default:
		throw "No registered action for:" + actionIndex;
	}
};

GameMakerLanguageLexer.prototype.TemplateStringEnd_action = function(localctx , actionIndex) {
	switch (actionIndex) {
	case 3:
		templateDepth--;
		break;
	default:
		throw "No registered action for:" + actionIndex;
	}
};
GameMakerLanguageLexer.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch (ruleIndex) {
		case 14:
			return this.TemplateStringEndExpression_sempred(localctx, predIndex);
    	default:
    		throw "No registered predicate for:" + ruleIndex;
    }
};

GameMakerLanguageLexer.prototype.TemplateStringEndExpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return templateDepth > 0;
		default:
			throw "No predicate with index:" + predIndex;
	}
};




